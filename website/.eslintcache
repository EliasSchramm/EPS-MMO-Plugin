[{"/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/reportWebVitals.js":"1","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/App.js":"2","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/sites/admin/admin.js":"3","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/tools/coockies.js":"4","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/sites/admin/loginForm.js":"5","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/index.js":"6","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/sites/admin/site_npc.js":"7","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/sites/admin/admin_header.js":"8","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/sites/admin/site_edit_npc.js":"9","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/tools/api/api.js":"10","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/tools/formater.js":"11","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/sites/general/Coord_Span.js":"12","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/sites/general/Skin_Obj.js":"13","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/sites/admin/site_static_effects.js":"14","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/tools/particleNameDir.js":"15","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/sites/admin/site_edit_static_effects.js":"16","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/tools/effectTypeDir.js":"17","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/tools/particleEffectDefaults.js":"18","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/sites/admin/site_items.js":"19","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/sites/admin/site_edit_item.js":"20"},{"size":362,"mtime":1612017592107,"results":"21","hashOfConfig":"22"},{"size":303,"mtime":1612727371832,"results":"23","hashOfConfig":"22"},{"size":2001,"mtime":1615477299075,"results":"24","hashOfConfig":"22"},{"size":830,"mtime":1612382594884,"results":"25","hashOfConfig":"22"},{"size":1684,"mtime":1612728690446,"results":"26","hashOfConfig":"22"},{"size":394,"mtime":1614372547235,"results":"27","hashOfConfig":"22"},{"size":2980,"mtime":1615474599762,"results":"28","hashOfConfig":"22"},{"size":784,"mtime":1613838509731,"results":"29","hashOfConfig":"22"},{"size":4506,"mtime":1614461670184,"results":"30","hashOfConfig":"22"},{"size":1780,"mtime":1615484142697,"results":"31","hashOfConfig":"22"},{"size":1163,"mtime":1614461773668,"results":"32","hashOfConfig":"22"},{"size":506,"mtime":1612731374992,"results":"33","hashOfConfig":"22"},{"size":864,"mtime":1612888803481,"results":"34","hashOfConfig":"22"},{"size":2838,"mtime":1613841752861,"results":"35","hashOfConfig":"22"},{"size":168,"mtime":1614465466633,"results":"36","hashOfConfig":"22"},{"size":8091,"mtime":1614466927121,"results":"37","hashOfConfig":"22"},{"size":1834,"mtime":1614283511448,"results":"38","hashOfConfig":"22"},{"size":461,"mtime":1614466861353,"results":"39","hashOfConfig":"22"},{"size":3040,"mtime":1615475434799,"results":"40","hashOfConfig":"22"},{"size":3166,"mtime":1615484044344,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1oop6hh",{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"44"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"44"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},"/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/reportWebVitals.js",[],["99","100"],"/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/App.js",["101"],"import logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport AdminPage from './sites/admin/admin';\n\nfunction App() {\n  return (\n    <Router>\n      <Route path='/admin' component={AdminPage} />      \n    </Router>\n  );\n}\n\nexport default App;\n","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/sites/admin/admin.js",["102","103","104"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\nimport LoginForm from './loginForm'\nimport Site_NPC from './site_npc'\nimport Site_Effects from './site_static_effects'\nimport Site_Items from './site_items'\nimport Admin_Header from './admin_header';\nimport NPC_edit from './site_edit_npc';\nimport Effect_edit from './site_edit_static_effects';\nimport Item_edit from './site_edit_item';\n\nconst coockie = require('../../tools/coockies');\n\nclass AdminPage extends React.Component {\n    constructor(probs){\n      super(probs);     \n    }   \n\n    componentDidMount(){\n        this.ticker = setInterval(() => {this.forceUpdate()}, 250);        \n    }    \n  \n    render(){   \n        if(coockie.readCookie(\"login\")){                 \n            return [\n                <div>\n                    <Admin_Header/>\n                    <Router>\n                        <Route path='/admin/npc' exact component={Site_NPC} />      \n                    </Router>    \n                    <Router>\n                        <Route path='/admin/npc/:id' exact component={NPC_edit} />      \n                    </Router>    \n\n                    <Router>\n                        <Route path='/admin/staticeffects' exact component={Site_Effects} />      \n                    </Router>    \n                    <Router>\n                        <Route path='/admin/staticeffects/:id' exact component={Effect_edit} />      \n                    </Router>  \n\n                    <Router>\n                        <Route path='/admin/items/' exact component={Site_Items} />      \n                    </Router>  \n                    <Router>\n                        <Route path='/admin/item/:id' exact component={Item_edit} />      \n                    </Router>             \n\n                </div>\n            ];\n        }else{\n            return (\n                <LoginForm/>\n            );\n        }        \n    }\n  \n  }\n\n  export default AdminPage","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/tools/coockies.js",["105","106"],"function setCookie (cookieName, cookieValue, hourToExpire) {\n    let date = new Date();\n    date.setTime(date.getTime()+(hourToExpire*60*60*1000));\n    document.cookie = cookieName + \" = \" + cookieValue + \"; expires = \" + date.toGMTString();\n};\n\nfunction readCookie(cname) {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for(var i = 0; i <ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) == ' ') {\n        c = c.substring(1);\n      }\n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n    return null;\n  }\n\nfunction deleteCoockie(name) {\n    document.cookie = name + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\"; \n}\n\n\nmodule.exports = {setCookie, readCookie, deleteCoockie};","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/sites/admin/loginForm.js",["107"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst coockie = require('../../tools/coockies');\n\nclass LoginForm extends React.Component {\n    constructor(probs){\n        super(probs);    \n        \n        this.state  = {username: 'username', password: ''};\n\n        this.onSubmit = this.onSubmit.bind(this);\n        this.handleUsernameChange = this.handleUsernameChange.bind(this);\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\n\n    } \n    \n    handleUsernameChange(event) { \n        this.setState({username: event.target.value}); \n    \n    }\n\n    handlePasswordChange(event) { \n        this.setState({password: event.target.value});   \n    }    \n\n    async onSubmit(){             \n        const url = \"http://0.0.0.0:10100/login/\" + this.state.username + \"/\" + this.state.password;\n        const response = await fetch(url, {mode: 'cors', headers: {'Access-Control-Allow-Origin':'*' }});\n        const data = await response.json();  \n\n        if(data.successfull){\n            coockie.setCookie(\"login\",data.session,3)\n        }                \n    }\n\n    render(){\n        return(\n            <div class='LoginForm'>\n                <h1>Please log in.</h1>\n                <form>\n                    <input type=\"text\" placeholder=\"Username\" onChange={this.handleUsernameChange}/>        \n                    <br/>    \n                    <input type=\"password\" placeholder=\"Password\" onChange={this.handlePasswordChange}/>     \n                    <br/>\n                    <input type=\"button\" value=\"Submit\" onClick={this.onSubmit}/>\n                </form>\n            </div>\n        );      \n    }\n  \n  }\n\n  export default LoginForm","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/index.js",["108","109","110"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './tools/coockies';\nimport effectTypes from './tools/effectTypeDir';\nimport { setCookie } from './tools/coockies';\n\nReactDOM.render(  \n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/sites/admin/site_npc.js",["111","112","113","114","115","116","117","118"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coord_Span from \"../general/Coord_Span\";\nimport Skin_Obj from \"../general/Skin_Obj\"\n\nconst formater = require('../../tools/formater');\nconst coockie = require('../../tools/coockies');\n\nclass NPC_row extends React.Component {\n\n    constructor(probs) {\n        super(probs);\n    }\n\n    render() {\n        return (\n            \n            <tr>\n                <td>\n                    <a href={'http://0.0.0.0:3000/admin/npc/' + this.props.id}>\n                        {this.props.id} \n                    </a>\n                </td>\n\n                <td>\n                    <a href={'http://0.0.0.0:3000/admin/npc/' + this.props.id}>\n                        {this.props.name}\n                    </a>\n                </td>\n\n                <td>                    \n                    <Coord_Span pos={this.props.pos}/>\n                </td>\n\n                <td>                    \n                    <Skin_Obj skin={this.props.skin} size={100} type={\"avatar\"} />\n                </td>\n            </tr>\n            \n        );\n    }\n}\n\nclass NPC_table extends React.Component {\n\n    constructor(probs) {\n        super(probs);\n\n        this.state = {npcs: <span></span>}\n    }\n\n    componentDidMount(){\n        this.ticker = setInterval(() => {this.createTable()}, 500);        \n    }    \n\n    async createTable() {\n        const session = coockie.readCookie('login');\n        let url = \"http://0.0.0.0:10100/admin/\" + session;\n        let response = await fetch(url, { mode: 'cors', headers: { 'Access-Control-Allow-Origin': '*' } });\n        let data = await response.json();       \n\n\n        if (data.verified) {\n            url = \"http://0.0.0.0:10100/admin/\" + session + \"/npc/getall\";\n            response = await fetch(url, { mode: 'cors', headers: { 'Access-Control-Allow-Origin': '*' } });\n            data = await response.json();  \n\n            let table = [];\n            data.npc.forEach(element => {\n                table.push(<NPC_row id={element.ID} name={element.NAME} pos={element.POS} skin={element.SKIN.split(\"<!>\")[0]}/>);\n            });         \n            this.setState({npcs: table});\n                \n        } else {\n            this.forceUpdate()\n\n            coockie.deleteCoockie(\"login\");\n            this.setState({npcs: <span></span>});\n        }\n\n        this.forceUpdate()\n    }\n\n    render() {\n        return (\n            <table class='NPC_Table'>                \n                <tr>\n                    <th>ID</th>\n                    <th>Name</th>\n                    <th>Position</th>\n                    <th> </th>\n                </tr>\n                {this.state.npcs}\n            </table>\n        );\n    }\n}\n\nclass Site_NPC extends React.Component {\n    constructor(probs) {\n        super(probs);\n    }\n\n    render() {\n        return (\n            <div class='Site_NPC'>\n                <NPC_table />\n            </div>\n        );\n    }\n\n}\n\nexport default Site_NPC","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/sites/admin/admin_header.js",["119","120","121"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst coockie = require('../../tools/coockies');\n\nclass Admin_Header extends React.Component {\n    constructor(probs){\n        super(probs);    \n    }   \n\n    render(){\n        return(\n            <div class=\"Admin_Header\">\n                <h1>Admin Panel</h1>\n                <hr/>   \n                <h2> <a href='http://0.0.0.0:3000/admin/npc'>NPC</a> | <a href='http://0.0.0.0:3000/admin/staticeffects'>Static Effects</a> | <a href='http://0.0.0.0:3000/admin/instances'>Instances</a> | <a href='http://0.0.0.0:3000/admin/items'>Items</a> | <a href='http://0.0.0.0:3000/admin/players'>Players</a></h2>\n                <hr/>                \n            </div>\n        );      \n    }\n  \n  }\n\n  export default Admin_Header","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/sites/admin/site_edit_npc.js",["122","123","124","125","126"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Skin_Obj from '../general/Skin_Obj'\n\nconst coockie = require('../../tools/coockies');\nconst api = require('../../tools/api/api');\n\nclass NPC_edit extends React.Component {\n\n    constructor(probs) {\n        super(probs);        \n\n        let url = window.location.href\n        let unslashed = url.split('/');\n        \n        this.state = {npc_name: '', npc_id: unslashed[unslashed.length - 1], npc_script: '', npc_skin:'', _npc_name: '', _npc_script: '', _npc_skin: ''}      \n        \n        this.onSubmit = this.onSubmit.bind(this);\n        this.handleNameChange = this.handleNameChange.bind(this)\n        this.handleSkinChange_0 = this.handleSkinChange_0.bind(this)\n        this.handleSkinChange_1 = this.handleSkinChange_1.bind(this)\n        this.handleScriptChange = this.handleScriptChange.bind(this)\n    }\n\n    async onSubmit(){\n        if(this.state._npc_name != ''){\n            api.editNPC(this.state.npc_id, 'NAME', this.state.npc_name);\n            this.setState({_npc_name: ''});\n        }\n\n        if(this.state._npc_skin != ''){\n            api.editNPC(this.state.npc_id, 'SKIN', this.state.npc_skin);\n            this.setState({_npc_skin: ''});\n        }\n\n        if(this.state._npc_script != ''){\n            api.editNPC(this.state.npc_id, 'SCRIPT', this.state.npc_script);\n            this.setState({_npc_script: ''});\n        }\n    }\n\n    handleNameChange(e){\n        this.setState({\n            _npc_name: e.target.value,\n            npc_name: e.target.value\n        })\n    }\n\n    handleSkinChange_0(e){     \n\n        let newSkin = e.target.value + \"<!>\" + this.state.npc_skin.split(\"<!>\")[1];\n\n        this.setState({\n            _npc_skin: newSkin,\n            npc_skin: newSkin\n        })\n    }\n\n    handleSkinChange_1(e){     \n\n        let newSkin = this.state.npc_skin.split(\"<!>\")[0] + \"<!>\" + e.target.value ;\n\n        this.setState({\n            _npc_skin: newSkin,\n            npc_skin: newSkin\n        })\n    }\n\n\n    handleScriptChange(e){\n        this.setState({\n            _npc_script: e.target.value,\n            npc_script: e.target.value\n        })\n    }\n\n    componentDidMount(){    \n        this.getNPC_Data()\n    }    \n\n    async getNPC_Data(id){\n        const session = coockie.readCookie('login');\n        let url = \"http://0.0.0.0:10100/admin/\" + session + \"/npc/get/\" + this.state.npc_id;\n        let response = await fetch(url, { mode: 'cors', headers: { 'Access-Control-Allow-Origin': '*' } });\n        let data = await response.json();  \n\n        if (data.verified) {\n            this.setState({\n                npc_name: data.npc.NAME,\n                npc_script: data.npc.SCRIPT,\n                npc_skin: data.npc.SKIN\n            });                \n        } else {\n            this.forceUpdate()\n            coockie.deleteCoockie(\"login\");  \n        }\n\n        this.forceUpdate()\n    }\n    \n\n    render() {\n        return (\n            <div class=\"Site_Edit_NPC\"> \n                <h2>Currently selected: {this.state.npc_name} [ID:{this.state.npc_id}]</h2>\n                \n                <form>\n                    <label><h3>Name</h3></label>                \n                    <input type='text' value={this.state.npc_name} onChange={this.handleNameChange}/>\n                    <br/>\n\n                    <h3>Skin</h3>\n\n                    <label>Texture_Data</label>\n                    <br/>                    \n                    <input type='text' value={this.state.npc_skin.split(\"<!>\")[0]} onChange={this.handleSkinChange_0}/>\n                    <br/>\n                    \n                    <label>Texture_Signature</label>\n                    <br/>\n                    <input type='text' value={this.state.npc_skin.split(\"<!>\")[1]} onChange={this.handleSkinChange_1}/>\n                    <br/>                         \n\n                    <Skin_Obj skin={this.state.npc_skin.split(\"<!>\")[0]} size={100} type={\"body\"} />\n\n                    <p>Attention: In the case that the character ingame doesn't look like the one in the preview, check the Texture_Signature</p>\n                    \n                    <label><h3>Script</h3></label>\n                    <input type='text' value={this.state.npc_script} onChange={this.handleScriptChange}/>\n                    <br/>\n\n                    <br/>\n                    <input type=\"button\" value=\"Submit\" onClick={this.onSubmit}/>\n                </form>\n\n            </div>\n        );\n    }\n}\n\nexport default NPC_edit","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/tools/api/api.js",["127","128"],"/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/tools/formater.js",["129","130","131","132","133","134","135","136","137"],"String.prototype.toCoord = function(){\n    return \"X:\" + this.getCoord(0) + \" Y: \" + this.getCoord(1) + \" Z: \" + this.getCoord(2);\n}\n\nString.prototype.getCoord = function (n) {\n    let _str = this.split('>>')[n]\n    return _str.split('.')[0]\n}\n\nNumber.prototype.min = function (int) {    \n    if(this < int) return int;\n    else return this + 0;\n}\n\nNumber.prototype.max = function (int) {    \n    if(this > int) return int;\n    else return this + 0;\n}\n\nfunction componentToHex(c) {\n    var hex = c.toString(16);\n    return hex.length == 1 ? \"0\" + hex : hex;\n  }\n  \nfunction rgbToHex(r,g,b) {\n    r = r.toString(16);\n    g = g.toString(16);\n    b = b.toString(16);\n  \n    if (r.length == 1)\n      r = \"0\" + r;\n    if (g.length == 1)\n      g = \"0\" + g;\n    if (b.length == 1)\n      b = \"0\" + b;\n  \n    return \"#\" + r + g + b;\n  }\n\n\nfunction hexToRgb(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n        r: parseInt(result[1], 16).min(1).max(255),\n        g: parseInt(result[2], 16).min(1).max(255),\n        b: parseInt(result[3], 16).min(1).max(255)\n    } : null;\n}\n  \nmodule.exports = {rgbToHex, hexToRgb}\n  ","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/sites/general/Coord_Span.js",["138","139","140"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst formater = require('../../tools/formater');\n\nclass Coord_Span extends React.Component {\n    constructor(probs) {\n        super(probs);\n    }\n\n    render() {\n        return (\n            <span class='Coord_Span'> X: <span class='X'> {this.props.pos.getCoord(0)} </span> Y: <span class='Y'> {this.props.pos.getCoord(1)} </span> Z: <span class='Z'> {this.props.pos.getCoord(2)} </span>  </span>\n        );\n    }\n\n}\n\nexport default Coord_Span","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/sites/general/Skin_Obj.js",["141","142","143","144"],"import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst formater = require('../../tools/formater');\n\nclass Skin_Obj extends React.Component {\n    constructor(probs) {\n        super(probs);\n    }\n\n    render() {\n        let base_url = \"https://mc-heads.net/\" + this.props.type + \"/\";     \n\n        let base64_encoded = \"\";\n\n        try{\n            base64_encoded = atob(this.props.skin);\n        }catch{}\n        \n        let id = \"Alex\";\n\n        if(base64_encoded != \"\"){    \n            let jsonObj = JSON.parse(base64_encoded);   \n            id = jsonObj.textures.SKIN.url;\n            let _id = id.split('/')\n            id = _id[4];\n       }       \n\n        return (            \n            <div>\n                <img src={base_url + id + \"/\" + this.props.size} alt=\"PIC\"/>\n            </div>        \n        );\n    }\n\n}\n\nexport default Skin_Obj","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/sites/admin/site_static_effects.js",["145","146","147","148","149","150","151","152"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport particleTypes from '../../tools/particleNameDir';\nimport Coord_Span from \"../general/Coord_Span\";\nimport Skin_Obj from \"../general/Skin_Obj\"\n\nconst formater = require('../../tools/formater');\nconst coockie = require('../../tools/coockies');\n\nclass Effect_row extends React.Component {\n\n    constructor(probs) {\n        super(probs);\n    }\n\n    render() {\n        return (\n            \n            <tr>\n                <td>\n                    <a href={'http://0.0.0.0:3000/admin/staticeffects/' + this.props.id}>\n                        {this.props.id} \n                    </a>\n                </td>\n\n                <td>                    \n                    <Coord_Span pos={this.props.pos}/>\n                </td>\n\n                <td>                    \n                    <span>{particleTypes[this.props.type]}</span>\n                </td>\n               \n            </tr>\n            \n        );\n    }\n}\n\nclass Effect_table extends React.Component {\n\n    constructor(probs) {\n        super(probs);\n\n        this.state = {npcs: <span></span>}\n    }\n\n    componentDidMount(){\n        this.ticker = setInterval(() => {this.createTable()}, 500);        \n    }    \n\n    async createTable() {\n        const session = coockie.readCookie('login');\n        let url = \"http://0.0.0.0:10100/admin/\" + session;\n        let response = await fetch(url, { mode: 'cors', headers: { 'Access-Control-Allow-Origin': '*' } });\n        let data = await response.json();       \n\n\n        if (data.verified) {\n            url = \"http://0.0.0.0:10100/admin/\" + session + \"/staticeffects/getall\";\n            response = await fetch(url, { mode: 'cors', headers: { 'Access-Control-Allow-Origin': '*' } });\n            data = await response.json();  \n\n            let table = [];\n            data.npc.forEach(element => {\n                table.push(<Effect_row id={element.ID} pos={element.POS} type={element.DATA.split(\">>\")[0]}/>);\n            });         \n            this.setState({npcs: table});\n                \n        } else {\n            this.forceUpdate()\n\n            coockie.deleteCoockie(\"login\");\n            this.setState({npcs: <span></span>});\n        }\n\n        this.forceUpdate()\n    }\n\n    render() {\n        return (\n            <table class='Effects_Table'>                \n                <tr>\n                    <th>ID</th>\n                    <th>Position</th>\n                    <th>Type</th>\n                </tr>\n                {this.state.npcs}\n            </table>\n        );\n    }\n}\n\nclass Site_Effects extends React.Component {\n    constructor(probs) {\n        super(probs);\n    }\n\n    render() {\n        return (\n            <div class='Site_NPC'>\n                <Effect_table />\n            </div>\n        );\n    }\n\n} \n\nexport default Site_Effects","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/tools/particleNameDir.js",[],"/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/sites/admin/site_edit_static_effects.js",["153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport particleTypes from '../../tools/particleNameDir';\nimport effectTypes from '../../tools/effectTypeDir';\nimport particleTypeDefaults from \"../../tools/particleEffectDefaults\";\n\nconst coockie = require('../../tools/coockies');\nconst api = require('../../tools/api/api');\nconst formater = require('../../tools/formater');\nconst rgbHex = require('rgb-hex');\n\nclass Effect_type_select extends React.Component{\n    render(){\n\n        let options = [];\n        let id = 0;\n\n        if(this.props.type == \"display\"){            \n            Object.entries(particleTypes).forEach(([key, value]) => {\n                if(key == this.props.cur){\n                    options.push(<option value={key} selected=\"selected\">{value}</option>);\n                }else{\n                    options.push(<option value={key}>{value}</option>);\n                }                \n            });\n        }else if(this.props.type == \"effects\"){\n            id = 1;\n            Object.entries(effectTypes).forEach(([key, value]) => {\n                if(value != \"null\"){\n                    if(key == this.props.cur){\n                        options.push(<option value={key} selected=\"selected\">{value}</option>);\n                    }else{\n                        options.push(<option value={key}>{value}</option>);\n                    }\n                }         \n            });\n        }\n\n        return(\n            <select name=\"type_option\" id=\"type_option\" e_id={id} onChange={this.props.handler}>\n                {                    \n                    options                \n                }\n            </select>\n        );\n    }\n}\n\nclass Effect_type_form extends React.Component{\n    render(){\n        let color_selector = <span></span>;        \n\n        let r = this.props.data[this.props.data.length - 3];\n        let g = this.props.data[this.props.data.length - 2];\n        let b = this.props.data[this.props.data.length - 1];\n\n        r = parseInt(r);\n        g = parseInt(g);\n        b = parseInt(b);\n\n        if(this.props.data[1] == \"REDSTONE\") color_selector = <input e_id={-1} type=\"color\" value={\"#\" + rgbHex(r,g,b)} onChange={this.props.handler}/>    \n\n        switch(this.props.data[0]){\n            case \"single\":\n                return(\n                    <div>                        \n                        <label>Effect: </label>\n                        <Effect_type_select type=\"effects\" cur={this.props.data[1]} handler={this.props.handler} />   \n                        <br/>\n                        \n                        {color_selector}\n                    </div>                    \n                );\n                break;\n           \n            case \"circle\":\n                return(\n                    <div>\n                        <label>Effect: </label>\n                        <Effect_type_select type=\"effects\" cur={this.props.data[1]} handler={this.props.handler} />   \n                        <br/>\n                        {color_selector}\n                        <br/>\n                        <h3>Properties</h3>\n                        <br/>\n                        <label>Radius: </label>\n                        <input e_id={2} type=\"number\" value={this.props.data[2]} onChange={this.props.handler}/> \n                        <br/>\n                        <label>Ring Points: </label>\n                        <input e_id={3} type=\"number\" value={this.props.data[3]} onChange={this.props.handler}/> \n                        <br/>\n                    </div>                        \n                );\n                break;\n                case \"pillar\":\n                    return(\n                        <div>\n                            <label>Effect: </label>\n                            <Effect_type_select type=\"effects\" cur={this.props.data[1]} handler={this.props.handler} />   \n                            <br/>\n                            {color_selector}\n                            <br/>\n                            <h3>Properties</h3>\n                            <br/>\n                            <label>Radius: </label>\n                            <input e_id={2} type=\"number\" value={this.props.data[2]} onChange={this.props.handler}/> \n                            <br/>\n                            <label>Ring Points: </label>\n                            <input e_id={3} type=\"number\" value={this.props.data[3]} onChange={this.props.handler}/> \n                            <br/>\n                            <label>Height: </label>\n                            <input e_id={4} type=\"number\" value={this.props.data[4]} onChange={this.props.handler}/> \n                            <br/>\n                            <label>Rings: </label>\n                            <input e_id={5} type=\"number\" value={this.props.data[5]} onChange={this.props.handler}/> \n                            <br/>\n                        </div>                        \n                    );\n                    break;\n        }\n        return(\n            <h3>ERROR: Type Not Found</h3>\n        );\n    }\n}\n\n\nclass Effect_edit extends React.Component {\n\n    constructor(probs) {\n        super(probs);        \n\n        let url = window.location.href\n        let unslashed = url.split('/');\n        \n        this.state = {effect_id: unslashed[unslashed.length - 1], data: undefined}      \n        \n        this.onSubmit = this.onSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    async onSubmit(){\n        let value = \"\";\n\n        this.state.data.forEach((k) => {\n            value += k + \">>\";\n        });\n\n        console.log(value);\n        api.editEffect(this.state.effect_id, \"DATA\", value);\n    }\n\n    handleChange(e){\n        let ele = e.target;\n        let id = ele.getAttribute(\"e_id\");\n        let _data = this.state.data;\n        \n        if(id != 0){\n            _data[id] = e.target.value;\n        }else{\n            _data = particleTypeDefaults[e.target.value];            \n        }\n\n        if(id == -1){\n            let hex = formater.hexToRgb(e.target.value);\n            \n            _data[_data.length - 3] = hex.r;\n            _data[_data.length - 2] = hex.g;\n            _data[_data.length - 1] = hex.b;\n\n            return;\n        }\n\n        this.setState(\n            {\n                data: _data\n            }\n        )\n    }\n\n    componentDidMount(){    \n        this.getEffect_Data()\n    }    \n\n    async getEffect_Data(){\n        const session = coockie.readCookie('login');\n        let url = \"http://0.0.0.0:10100/admin/\" + session + \"/staticeffects/get/\" + this.state.effect_id;\n        let response = await fetch(url, { mode: 'cors', headers: { 'Access-Control-Allow-Origin': '*' } });\n        let data = await response.json();  \n\n        if (data.verified) {\n           let _data = data.effect.DATA.split(\">>\");\n           this.setState({\n               data: _data\n           })\n        } else {\n            this.forceUpdate()\n            coockie.deleteCoockie(\"login\");  \n        }\n\n        this.forceUpdate()\n    }\n\n    render() {  \n        \n        if(this.state.data == undefined){return <h3>Loading.........</h3>}\n\n        return (\n            <div class=\"Site_Edit_Effects\"> \n                <h2>Currently selected: {particleTypes[this.state.data[0]]} [ID: {this.state.effect_id}; EFFECT: {effectTypes[this.state.data[1]]}]</h2>                \n                <form>\n                    <br/>\n                    <h3>General</h3>\n                    <br/>\n                    <label>Display: </label>\n                    <Effect_type_select type=\"display\" cur={this.state.data[0]} handler={this.handleChange}/>                \n                    <br/>\n                    <br/>\n                    <Effect_type_form data={this.state.data} handler={this.handleChange} />\n                    <br/>\n                    <br/>\n                    <input type=\"button\" value=\"Submit\" onClick={this.onSubmit}/>\n                    <br/>\n                </form>\n            </div>\n        );        \n    }\n}\n\nexport default Effect_edit","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/tools/effectTypeDir.js",[],"/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/tools/particleEffectDefaults.js",["172"],"const particleTypes = require(\"./particleNameDir\")\n\nconst particleTypeDefaults = {\n    \"single\"            :[\"single\", \"REDSTONE\", \"1\", \"1\", \"1\"], // TYPE EFFECT R G B\n    \"circle\"            :[\"circle\", \"REDSTONE\", \"1\", \"20\",\"1\", \"1\", \"1\"], // TYPE EFFECT RADIUS RING_POINTS R G B\n    \"pillar\"            :[\"pillar\", \"REDSTONE\", \"1\", \"10\", \"2\", \"10\", \"1\", \"1\", \"1\"] // TYPE EFFECT RADIUS RING_POINTS HEIGHT RINGS R G B\n}\n\nmodule.exports = particleTypeDefaults;","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/sites/admin/site_items.js",["173","174","175","176","177","178","179","180","181"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Coord_Span from \"../general/Coord_Span\";\nimport Skin_Obj from \"../general/Skin_Obj\"\n\nconst formater = require('../../tools/formater');\nconst coockie = require('../../tools/coockies');\n\nclass Item_row extends React.Component {\n\n    constructor(probs) {\n        super(probs);\n    }\n\n    render() {\n        return (            \n            <tr>\n                <td>\n                    <a href={'http://0.0.0.0:3000/admin/item/' + this.props.id}>\n                        {this.props.id} \n                    </a>\n                </td>\n\n                <td>\n                    <a href={'http://0.0.0.0:3000/admin/item/' + this.props.id}>\n                        {this.props.name}\n                    </a>\n                </td>\n\n                <td>                    \n                    <p>\n                        {this.props.type}\n                    </p>\n                </td>\n\n                <td>                    \n                    <img src={'data:image/jpeg;base64,' + this.props.icon} width='72px' height='72px' />\n                </td>\n            </tr>\n            \n        );\n    }\n}\n\nclass Item_table extends React.Component {\n\n    constructor(probs) {\n        super(probs);\n\n        this.state = {items: <span></span>}\n    }\n\n    componentDidMount(){\n        this.ticker = setInterval(() => {this.createTable()}, 500);        \n    }    \n\n    async createTable() {\n        const session = coockie.readCookie('login');\n        let url = \"http://0.0.0.0:10100/admin/\" + session;\n        let response = await fetch(url, { mode: 'cors', headers: { 'Access-Control-Allow-Origin': '*' } });\n        let data = await response.json();       \n\n\n        if (data.verified) {\n            url = \"http://0.0.0.0:10100/admin/\" + session + \"/item/getall\";\n            response = await fetch(url, { mode: 'cors', headers: { 'Access-Control-Allow-Origin': '*' } });\n            data = await response.json();  \n\n            let table = [];\n            data.items.forEach(element => {\n                table.push(<Item_row id={element.ID} name={element.NAME} type={'element.type'} icon={element.ICON}/>);\n            });         \n            this.setState({items: table});\n                \n        } else {\n            this.forceUpdate()\n\n            coockie.deleteCoockie(\"login\");\n            this.setState({items: <span></span>});\n        }\n\n        this.forceUpdate()\n    }\n\n    render() {\n        return (\n            <table class='NPC_Table'>                \n                <tr>\n                    <th>ID</th>\n                    <th>Name</th>\n                    <th>Type</th>\n                    <th> </th>\n                </tr>\n                {this.state.items}\n            </table>\n        );\n    }\n}\n\nclass Site_Items extends React.Component {\n    constructor(probs) {\n        super(probs);\n    }\n\n    render() {\n        return (\n            <div class='Site_Items'>\n                <Item_table />\n            </div>\n        );\n    }\n\n}\n\nexport default Site_Items","/home/elias/Documents/GitHub/EPS-MMO-Plugin/website/src/sites/admin/site_edit_item.js",["182","183","184","185","186","187","188","189"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport particleTypes from '../../tools/particleNameDir';\nimport effectTypes from '../../tools/effectTypeDir';\nimport particleTypeDefaults from \"../../tools/particleEffectDefaults\";\n\nconst coockie = require('../../tools/coockies');\nconst api = require('../../tools/api/api');\nconst formater = require('../../tools/formater');\nconst rgbHex = require('rgb-hex');\n\n\nclass Item_edit extends React.Component {\n\n    constructor(probs) {\n        super(probs);        \n\n        let url = window.location.href\n        let unslashed = url.split('/');\n        \n        this.state = {item_id: unslashed[unslashed.length - 1], name:\"\" , icon:\"\"}      \n        \n        this.onSubmit = this.onSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    async onSubmit(){        \n        //console.log(value);\n        api.editItem(this.state.item_id, \"ICON\", this.state.icon)\n        //api.editEffect(this.state.effect_id, \"DATA\", value);\n    }\n\n    handleChange(e){      \n        let ele = e.target;\n        let id = ele.getAttribute(\"id\");\n\n        if(id === \"icon\"){\n\n            console.log(this.getBase64(ele.files[0]));\n\n        }\n    }\n\n    componentDidMount(){    \n        this.getEffect_Data()\n    }    \n\n    getBase64(file) { \n        const reader = new FileReader();\n        reader.onloadend = () => {\n          // use a regex to remove data url part\n          const base64String = reader.result\n            .replace(\"data:\", \"\")\n            .replace(/^.+,/, \"\");   \n            this.setState({\n                icon:base64String\n            })\n        };\n        reader.readAsDataURL(file);   \n    }\n\n    async getEffect_Data(){\n        const session = coockie.readCookie('login');\n        let url = \"http://0.0.0.0:10100/admin/\" + session + \"/item/get/\" + this.state.item_id;\n        let response = await fetch(url, { mode: 'cors', headers: { 'Access-Control-Allow-Origin': '*' } });\n        let data = await response.json();  \n\n        if (data.verified) {\n           let _data = data.item;\n           this.setState({\n               name:_data.NAME,\n               icon: _data.ICON\n           })\n        } else {\n            this.forceUpdate()\n            coockie.deleteCoockie(\"login\");  \n        }\n\n        this.forceUpdate()\n    }\n\n    render() {  \n        \n        if(this.state.icon == \"\"){return <h3>Loading.........</h3>}\n\n        return (\n            <div class=\"s\"> \n                <h2>Currently selected:  [ID: {this.state.item_id}; NAME: {this.state.name}]</h2>                \n                <form>\n                    <br/>\n                    <img src={'data:image/jpeg;base64,' + this.state.icon} width='172px' height='172px' />\n                    <br />\n                    <input type=\"file\"\n                        id=\"icon\" name=\"icon\"\n                        accept=\"image/png, image/jpeg\" onChange={this.handleChange}></input>\n                    <br />\n                    <input type=\"button\" value=\"Submit\" onClick={this.onSubmit}/>\n                    <br/>\n                </form>\n            </div>\n        );        \n    }\n}\n\nexport default Item_edit",{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":1,"column":8,"nodeType":"196","messageId":"197","endLine":1,"endColumn":12},{"ruleId":"194","severity":1,"message":"198","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":16},{"ruleId":"199","severity":1,"message":"200","line":17,"column":5,"nodeType":"201","messageId":"202","endLine":19,"endColumn":6},{"ruleId":"203","severity":1,"message":"204","line":29,"column":21,"nodeType":"205","endLine":29,"endColumn":36},{"ruleId":"206","severity":1,"message":"207","line":13,"column":26,"nodeType":"208","messageId":"209","endLine":13,"endColumn":28},{"ruleId":"206","severity":1,"message":"207","line":16,"column":27,"nodeType":"208","messageId":"209","endLine":16,"endColumn":29},{"ruleId":"194","severity":1,"message":"198","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":16},{"ruleId":"194","severity":1,"message":"210","line":5,"column":8,"nodeType":"196","messageId":"197","endLine":5,"endColumn":23},{"ruleId":"194","severity":1,"message":"211","line":8,"column":8,"nodeType":"196","messageId":"197","endLine":8,"endColumn":19},{"ruleId":"194","severity":1,"message":"212","line":9,"column":10,"nodeType":"196","messageId":"197","endLine":9,"endColumn":19},{"ruleId":"194","severity":1,"message":"198","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":16},{"ruleId":"194","severity":1,"message":"213","line":6,"column":7,"nodeType":"196","messageId":"197","endLine":6,"endColumn":15},{"ruleId":"199","severity":1,"message":"200","line":11,"column":5,"nodeType":"201","messageId":"202","endLine":13,"endColumn":6},{"ruleId":"203","severity":1,"message":"214","line":32,"column":21,"nodeType":"205","endLine":32,"endColumn":55},{"ruleId":"203","severity":1,"message":"215","line":36,"column":21,"nodeType":"205","endLine":36,"endColumn":83},{"ruleId":"203","severity":1,"message":"216","line":70,"column":28,"nodeType":"205","endLine":70,"endColumn":128},{"ruleId":"199","severity":1,"message":"200","line":100,"column":5,"nodeType":"201","messageId":"202","endLine":102,"endColumn":6},{"ruleId":"203","severity":1,"message":"217","line":107,"column":17,"nodeType":"205","endLine":107,"endColumn":30},{"ruleId":"194","severity":1,"message":"198","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":16},{"ruleId":"194","severity":1,"message":"218","line":4,"column":7,"nodeType":"196","messageId":"197","endLine":4,"endColumn":14},{"ruleId":"199","severity":1,"message":"200","line":7,"column":5,"nodeType":"201","messageId":"202","endLine":9,"endColumn":6},{"ruleId":"194","severity":1,"message":"198","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":16},{"ruleId":"206","severity":1,"message":"219","line":26,"column":33,"nodeType":"208","messageId":"209","endLine":26,"endColumn":35},{"ruleId":"206","severity":1,"message":"219","line":31,"column":33,"nodeType":"208","messageId":"209","endLine":31,"endColumn":35},{"ruleId":"206","severity":1,"message":"219","line":36,"column":35,"nodeType":"208","messageId":"209","endLine":36,"endColumn":37},{"ruleId":"203","severity":1,"message":"215","line":124,"column":21,"nodeType":"205","endLine":124,"endColumn":101},{"ruleId":"220","severity":1,"message":"221","line":42,"column":1,"nodeType":"222","messageId":"209","endLine":52,"endColumn":4},{"ruleId":"220","severity":1,"message":"221","line":54,"column":1,"nodeType":"222","messageId":"209","endLine":63,"endColumn":2},{"ruleId":"220","severity":1,"message":"221","line":1,"column":1,"nodeType":"222","messageId":"209","endLine":3,"endColumn":2},{"ruleId":"220","severity":1,"message":"221","line":5,"column":1,"nodeType":"222","messageId":"209","endLine":8,"endColumn":2},{"ruleId":"220","severity":1,"message":"223","line":10,"column":1,"nodeType":"222","messageId":"209","endLine":13,"endColumn":2},{"ruleId":"220","severity":1,"message":"223","line":15,"column":1,"nodeType":"222","messageId":"209","endLine":18,"endColumn":2},{"ruleId":"194","severity":1,"message":"224","line":20,"column":10,"nodeType":"196","messageId":"197","endLine":20,"endColumn":24},{"ruleId":"206","severity":1,"message":"207","line":22,"column":23,"nodeType":"208","messageId":"209","endLine":22,"endColumn":25},{"ruleId":"206","severity":1,"message":"207","line":30,"column":18,"nodeType":"208","messageId":"209","endLine":30,"endColumn":20},{"ruleId":"206","severity":1,"message":"207","line":32,"column":18,"nodeType":"208","messageId":"209","endLine":32,"endColumn":20},{"ruleId":"206","severity":1,"message":"207","line":34,"column":18,"nodeType":"208","messageId":"209","endLine":34,"endColumn":20},{"ruleId":"194","severity":1,"message":"198","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":16},{"ruleId":"194","severity":1,"message":"213","line":4,"column":7,"nodeType":"196","messageId":"197","endLine":4,"endColumn":15},{"ruleId":"199","severity":1,"message":"200","line":7,"column":5,"nodeType":"201","messageId":"202","endLine":9,"endColumn":6},{"ruleId":"194","severity":1,"message":"198","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":16},{"ruleId":"194","severity":1,"message":"213","line":4,"column":7,"nodeType":"196","messageId":"197","endLine":4,"endColumn":15},{"ruleId":"199","severity":1,"message":"200","line":7,"column":5,"nodeType":"201","messageId":"202","endLine":9,"endColumn":6},{"ruleId":"206","severity":1,"message":"219","line":22,"column":27,"nodeType":"208","messageId":"209","endLine":22,"endColumn":29},{"ruleId":"194","severity":1,"message":"198","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":16},{"ruleId":"194","severity":1,"message":"225","line":5,"column":8,"nodeType":"196","messageId":"197","endLine":5,"endColumn":16},{"ruleId":"194","severity":1,"message":"213","line":7,"column":7,"nodeType":"196","messageId":"197","endLine":7,"endColumn":15},{"ruleId":"199","severity":1,"message":"200","line":12,"column":5,"nodeType":"201","messageId":"202","endLine":14,"endColumn":6},{"ruleId":"203","severity":1,"message":"214","line":27,"column":21,"nodeType":"205","endLine":27,"endColumn":55},{"ruleId":"203","severity":1,"message":"226","line":66,"column":28,"nodeType":"205","endLine":66,"endColumn":110},{"ruleId":"199","severity":1,"message":"200","line":95,"column":5,"nodeType":"201","messageId":"202","endLine":97,"endColumn":6},{"ruleId":"203","severity":1,"message":"227","line":102,"column":17,"nodeType":"205","endLine":102,"endColumn":33},{"ruleId":"194","severity":1,"message":"198","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":16},{"ruleId":"206","severity":1,"message":"207","line":18,"column":28,"nodeType":"208","messageId":"209","endLine":18,"endColumn":30},{"ruleId":"206","severity":1,"message":"207","line":20,"column":24,"nodeType":"208","messageId":"209","endLine":20,"endColumn":26},{"ruleId":"206","severity":1,"message":"207","line":26,"column":34,"nodeType":"208","messageId":"209","endLine":26,"endColumn":36},{"ruleId":"206","severity":1,"message":"219","line":29,"column":26,"nodeType":"208","messageId":"209","endLine":29,"endColumn":28},{"ruleId":"206","severity":1,"message":"207","line":30,"column":28,"nodeType":"208","messageId":"209","endLine":30,"endColumn":30},{"ruleId":"206","severity":1,"message":"207","line":61,"column":31,"nodeType":"208","messageId":"209","endLine":61,"endColumn":33},{"ruleId":"228","severity":1,"message":"229","line":63,"column":9,"nodeType":"230","messageId":"231","endLine":120,"endColumn":10},{"ruleId":"203","severity":1,"message":"232","line":68,"column":25,"nodeType":"205","endLine":68,"endColumn":116},{"ruleId":"233","severity":1,"message":"234","line":74,"column":17,"nodeType":"235","messageId":"236","endLine":74,"endColumn":23},{"ruleId":"203","severity":1,"message":"232","line":80,"column":25,"nodeType":"205","endLine":80,"endColumn":116},{"ruleId":"233","severity":1,"message":"234","line":94,"column":17,"nodeType":"235","messageId":"236","endLine":94,"endColumn":23},{"ruleId":"203","severity":1,"message":"232","line":99,"column":29,"nodeType":"205","endLine":99,"endColumn":120},{"ruleId":"233","severity":1,"message":"234","line":119,"column":21,"nodeType":"235","messageId":"236","endLine":119,"endColumn":27},{"ruleId":"206","severity":1,"message":"219","line":158,"column":15,"nodeType":"208","messageId":"209","endLine":158,"endColumn":17},{"ruleId":"206","severity":1,"message":"207","line":164,"column":15,"nodeType":"208","messageId":"209","endLine":164,"endColumn":17},{"ruleId":"206","severity":1,"message":"207","line":206,"column":28,"nodeType":"208","messageId":"209","endLine":206,"endColumn":30},{"ruleId":"203","severity":1,"message":"232","line":216,"column":21,"nodeType":"205","endLine":216,"endColumn":110},{"ruleId":"203","severity":1,"message":"237","line":219,"column":21,"nodeType":"205","endLine":219,"endColumn":92},{"ruleId":"194","severity":1,"message":"238","line":1,"column":7,"nodeType":"196","messageId":"197","endLine":1,"endColumn":20},{"ruleId":"194","severity":1,"message":"198","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":16},{"ruleId":"194","severity":1,"message":"239","line":3,"column":8,"nodeType":"196","messageId":"197","endLine":3,"endColumn":18},{"ruleId":"194","severity":1,"message":"225","line":4,"column":8,"nodeType":"196","messageId":"197","endLine":4,"endColumn":16},{"ruleId":"194","severity":1,"message":"213","line":6,"column":7,"nodeType":"196","messageId":"197","endLine":6,"endColumn":15},{"ruleId":"199","severity":1,"message":"200","line":11,"column":5,"nodeType":"201","messageId":"202","endLine":13,"endColumn":6},{"ruleId":"240","severity":1,"message":"241","line":37,"column":21,"nodeType":"205","endLine":37,"endColumn":105},{"ruleId":"203","severity":1,"message":"242","line":71,"column":28,"nodeType":"205","endLine":71,"endColumn":117},{"ruleId":"199","severity":1,"message":"200","line":101,"column":5,"nodeType":"201","messageId":"202","endLine":103,"endColumn":6},{"ruleId":"203","severity":1,"message":"243","line":108,"column":17,"nodeType":"205","endLine":108,"endColumn":31},{"ruleId":"194","severity":1,"message":"198","line":2,"column":8,"nodeType":"196","messageId":"197","endLine":2,"endColumn":16},{"ruleId":"194","severity":1,"message":"244","line":3,"column":8,"nodeType":"196","messageId":"197","endLine":3,"endColumn":21},{"ruleId":"194","severity":1,"message":"211","line":4,"column":8,"nodeType":"196","messageId":"197","endLine":4,"endColumn":19},{"ruleId":"194","severity":1,"message":"245","line":5,"column":8,"nodeType":"196","messageId":"197","endLine":5,"endColumn":28},{"ruleId":"194","severity":1,"message":"213","line":9,"column":7,"nodeType":"196","messageId":"197","endLine":9,"endColumn":15},{"ruleId":"194","severity":1,"message":"246","line":10,"column":7,"nodeType":"196","messageId":"197","endLine":10,"endColumn":13},{"ruleId":"206","severity":1,"message":"207","line":84,"column":28,"nodeType":"208","messageId":"209","endLine":84,"endColumn":30},{"ruleId":"240","severity":1,"message":"241","line":91,"column":21,"nodeType":"205","endLine":91,"endColumn":107},"no-native-reassign",["247"],"no-negated-in-lhs",["248"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","react/jsx-pascal-case","Imported JSX component Admin_Header must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'reportWebVitals' is defined but never used.","'effectTypes' is defined but never used.","'setCookie' is defined but never used.","'formater' is assigned a value but never used.","Imported JSX component Coord_Span must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Skin_Obj must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component NPC_row must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component NPC_table must be in PascalCase or SCREAMING_SNAKE_CASE","'coockie' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-extend-native","String prototype is read only, properties should not be added.","AssignmentExpression","Number prototype is read only, properties should not be added.","'componentToHex' is defined but never used.","'Skin_Obj' is defined but never used.","Imported JSX component Effect_row must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Effect_table must be in PascalCase or SCREAMING_SNAKE_CASE","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Imported JSX component Effect_type_select must be in PascalCase or SCREAMING_SNAKE_CASE","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","Imported JSX component Effect_type_form must be in PascalCase or SCREAMING_SNAKE_CASE","'particleTypes' is assigned a value but never used.","'Coord_Span' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Imported JSX component Item_row must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Item_table must be in PascalCase or SCREAMING_SNAKE_CASE","'particleTypes' is defined but never used.","'particleTypeDefaults' is defined but never used.","'rgbHex' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]